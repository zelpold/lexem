#ifndef STATEMACHIN_H

#define STATEMACHIN_H
#include <QList>
#include <QMap>
#include <QObject>
#include <string>
#include "lexem.h"
                //1  2    3    4    5
enum LexemTypes {id, key, sep, con, oper};




class StateMachine :  public QObject

{

    Q_OBJECT
    int transition_table[18][18] = {
        {0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0}, //err 0
        {1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1}, //F  1
        {0,  3,  0, 12,  7,  9, 15,  5,  5,  5,  6,  6,  5,  0,  1,  4,  1,  0}, //H  2
        {3,  3,  1,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3}, //C  3
        {0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1}, //G  4
        {0,  3,  0,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  1,  4,  1,  0}, //V  5
        {0,  3,  0,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  1,  4,  1,  0}, //P  6
        {0,  3,  0,  5,  5,  5,  5,  8,  5,  5,  5,  5,  5,  5,  1,  4,  1,  0}, //O1 7
        {0,  3,  0,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  1,  4,  1,  0}, //O2 8
        {0,  3,  0,  5, 10,  5,  5,  5,  5,  5,  5,  5,  5,  5,  1,  4,  1,  0}, //X1 9
        {0,  3,  0,  5,  5,  5,  5, 11,  5,  5,  5,  5,  5,  5,  1,  4,  1,  0}, //x2 10
        {0,  3,  0,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  1,  4,  1,  0}, //X3 11
        {0,  3,  0,  5,  5,  5, 13,  5,  5,  5,  5,  5,  5,  5,  1,  4,  1,  0}, //A1 12
        {0,  3,  0,  5,  5,  5,  5,  5,  5, 14,  5,  5,  5,  5,  1,  4,  1,  0}, //A2 13
        {0,  3,  0,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  1,  4,  1,  0}, //A3 14
        {0,  3,  0,  5, 16,  5,  5,  5,  5,  5,  5,  5,  5,  5,  1,  4,  1,  0}, //N1 15
        {0,  3,  0,  5,  5,  5,  5,  5, 17,  5,  5,  5,  5,  5,  1,  4,  1,  0}, //N2 16
        {0,  3,  0,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  1,  4,  1,  0} //N3 17
    };// A   {   }   a   o   x   n   r   t   d   T   F   Б   Ц  ;()  :   П   =
    char alphabet[73]  =
    {
        '{','}','a','b','c','d','e','f',
        'g','h','i','j','k','l','m','n',
        'o','p','q','r','s','t','u','v',
        'w','x','y','z','A','B','C','D',
        'E','F','G','H','I','J','K','L',
        'M','N','O','P','Q','R','S','T',
        'U','V','W','X','Y','Z','0','1',
        '2','3','4','5','6','7','8','9',
        ';',':','(',')','\n',' ','\0','=',
        '_'
    };

    int groups[73] =
    {
        1,  2,  3,  12, 12, 9,  12, 12,
        12, 12, 12, 12, 12, 12, 12, 6,
        4,  12, 12, 7,  12, 8,  12, 12,
        12, 5,  12, 12, 12, 12, 12, 12,
        12, 11, 12, 12, 12, 12, 12, 12,
        12, 12, 12, 12, 12, 12, 12, 10,
        12, 12, 12, 12, 12, 12, 13, 13,
        13, 13, 13, 13, 13, 13, 13, 13,
        14, 15, 14, 14, 16, 16, 16, 17,
        12
    };

    int mapTable[256] = {0};
    QList<Lexem> lexems;
public:

    StateMachine();
    void work(QString text);
    int checkError(int state);
    int getNewState(int state, char s);
    void addLexem(std::string buffer, int line, int pos, std::string type);
    QList<Lexem> getLexemList();
signals:
    void errorSignal(QString str);
};
#endif
